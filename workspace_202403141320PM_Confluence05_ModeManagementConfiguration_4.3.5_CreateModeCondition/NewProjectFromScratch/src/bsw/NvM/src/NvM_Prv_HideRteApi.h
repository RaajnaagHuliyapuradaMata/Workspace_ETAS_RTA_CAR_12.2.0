/*
 **********************************************************************************************************************
 *
 * COPYRIGHT (c) ETAS GmbH 2020, all rights reserved
 * The reproduction, distribution and utilization of this document as well as the communication of its contents to
 * others without explicit authorization is prohibited. Offenders will be held liable for the payment of damages.
 * All rights reserved in the event of the grant of a patent, utility model or design.
 *
 **********************************************************************************************************************
*/
#ifndef NVM_PRV_HIDERTEAPI_H
#define NVM_PRV_HIDERTEAPI_H
/*
 **********************************************************************************************************************
 * ONLY INCLUDED FROM C-Files (not from HEADER files)
 **********************************************************************************************************************
 */

/*
 **********************************************************************************************************************
 * Includes
 **********************************************************************************************************************
 */
#include "rba_MemLib_UseRte.h"
#include "NvM_Cfg.h"
/*
 **********************************************************************************************************************
 * Type definitions
 **********************************************************************************************************************
 */
#if (defined(RBA_MEMLIB_USE_RTE) && (NVM_RB_RTE_USED == STD_ON))
/**
 * Definition of a compiler switch which controls hiding of public NvM APIs and data types provided by RTE generator,
 * for details please see coding guidelines Rule BSW_ServiceRTE_002.
 */
# define NVM_RB_HIDE_RTEAPI
#endif

#if (defined(RBA_MEMLIB_USE_RTE) && (NVM_RB_RTE_MAINFUNC_USED == STD_ON))
/**
 * Definition of a compiler switch which controls hiding of public NvM APIs and data types provided by RTE generator,
 * for details please see coding guidelines Rule BSW_ServiceRTE_002.
 */
# define NVM_RB_HIDE_MAINFUNC_RTEAPI
#endif

// If RTE generator is NOT used then the NvM uses all public APIs and data types from NvM.h and not from header files
// generated by the RTE.
#include "NvM.h"


/**
 * If RTE generator is used then the NvM uses all public APIs and data types from header files generated by the RTE
 * and not from NvM.h.
 */
#ifdef NVM_RB_HIDE_RTEAPI
# include "Rte_NvM.h"
# include "Rte_NvM_Type.h"
#endif
#ifdef NVM_RB_HIDE_MAINFUNC_RTEAPI
# include "SchM_NvM.h"
#endif

/* NVM_PRV_HIDERTEAPI_H */
#endif

