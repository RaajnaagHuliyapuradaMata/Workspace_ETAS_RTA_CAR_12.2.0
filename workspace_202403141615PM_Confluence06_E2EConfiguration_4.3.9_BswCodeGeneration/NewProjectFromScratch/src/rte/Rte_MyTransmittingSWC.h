/** @file     Rte_MyTransmittingSWC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE for Windows
  * @note     Version 12.2.0
  */

#ifndef RTE_MYTRANSMITTINGSWC_H
#define RTE_MYTRANSMITTINGSWC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_MyTransmittingSWC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_Tx)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_PDS_MyTransmittingSWC_My_SR_Interface_P {
   Rte_WriteFP_MyTransmittingSWC_My_SR_Interface_DE_MyDataElement Write_DE_MyDataElement;
};
typedef struct Rte_PDS_MyTransmittingSWC_My_SR_Interface_P Rte_PDS_MyTransmittingSWC_My_SR_Interface_P;
typedef struct Rte_PDS_MyTransmittingSWC_My_SR_Interface_P Rte_PDS_MyTransmittingSWC_My_SR_Interface_PA[1];
struct Rte_CDS_MyTransmittingSWC {
   /* Port Data Structure Arrays */
   Rte_PDS_MyTransmittingSWC_My_SR_Interface_PA PPortPrototype_0;
};
typedef struct Rte_CDS_MyTransmittingSWC Rte_CDS_MyTransmittingSWC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
#ifndef RTE_CORE
typedef P2CONST(struct Rte_PDS_MyTransmittingSWC_My_SR_Interface_P, AUTOMATIC, RTE_CONST) Rte_PortHandle_My_SR_Interface_P;
#endif /* RTE_CORE */

/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"
extern CONST(struct Rte_CDS_MyTransmittingSWC, RTE_CONST) Rte_Instance_CPT_MyTransmittingSWC_ApplicationEcu;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_MyTransmittingSWC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Tx)
/* Inline write optimization; Rte_Write_PPortPrototype_0_DE_MyDataElement to null body */
#define Rte_Write_PPortPrototype_0_DE_MyDataElement( self, data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif

/* Rte_Port API */
#define Rte_Port_PPortPrototype_0(self) ((Rte_PortHandle_My_SR_Interface_P)&((self)->PPortPrototype_0[0]))

/* Rte_NPorts API */
#define Rte_NPorts_My_SR_Interface_P(self) ((uint8)1)

/* Rte_Ports API */
#define Rte_Ports_My_SR_Interface_P(self) ((Rte_PortHandle_My_SR_Interface_P)&((self)->PPortPrototype_0[0]))

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define MyTransmittingSWC_START_SEC_CODE
#include "MyTransmittingSWC_MemMap.h"
FUNC(void, MyTransmittingSWC_CODE) RE_Tx_func(CONST(Rte_SelfType_MyTransmittingSWC, AUTOMATIC) self);
#define MyTransmittingSWC_STOP_SEC_CODE
#include "MyTransmittingSWC_MemMap.h"

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_MYTRANSMITTINGSWC_H */
