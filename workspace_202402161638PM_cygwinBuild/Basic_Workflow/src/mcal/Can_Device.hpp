/*******************************************************************************
 * Autogenerated by MCALgen for CAN V3.0.51.35438: Can_Device.hpp
 *******************************************************************************/
#ifndef CAN_DEVICE_HPP_
#define CAN_DEVICE_HPP_

typedef enum{
  CAN_STATE_UNINIT,
  CAN_STATE_STOPPED,
  CAN_STATE_STARTED,
  CAN_STATE_SLEEP,
}Can_EventState;

extern void Can_RaiseInterrupt(void);
extern void Can_ReportDETError(uint32 instanceId, uint32 apiId, uint32 errorId);
extern void Can_ReportRuntimeError(uint32 instanceId, uint32 apiId, uint32 errorId);
extern void Can_RaiseWriteEvent(int index, boolean source, uint8 result, Can_HwHandleType Hth, Can_Hwp_Frame* frame);
extern void Can_RaiseRxEvent(int index, Can_HwHandleType handle, Can_Hwp_Frame* frame);
extern void Can_RaiseTxEvent(int index, Can_HwHandleType handle, Can_Hwp_Frame* frame);
extern void Can_RaiseStateEvent(int index, Can_EventState state, const char* hardwarename);
extern void Can_RaiseCanState (Can_DriverStatus state);
extern void Can_RaiseErrorState(int index, vrtaUInt errorState);
extern void Can_RaiseControllerRxErrorCounterEvent(int index, uint8 RxErrorCounter);
extern void Can_RaiseControllerTxErrorCounterEvent( int index, uint8 TxErrorCounter);
extern void Can_RaiseError(int index, vrtaUInt error);
extern void Can_RaiseCurrentTimeEvent(int index, Can_TimeStampType timeStamp);
extern void Can_RaiseEnableEgressTimeStampEvent(int index, Can_HwHandleType Hth, boolean enabled);
extern void Can_RaiseEgressTimeStampEvent (int index, PduIdType TxPduId, Can_HwHandleType Hth, Can_TimeStampType timeStamp) ;
extern void Can_RaiseIngressTimeStampEvent(int index, Can_HwHandleType Hrh, Can_TimeStampType timeStamp);
#endif /* CAN_DEVICE_HPP_ */

#ifndef NULL_CPP_PTR
 #define NULL_CPP_PTR  (0)
#endif

